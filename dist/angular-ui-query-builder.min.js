"use strict";function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}angular.module("angular-ui-query-builder",[]).component("uiQueryBuilder",{bindings:{query:"=",spec:"<"},template:'\n\t\t<div class="ui-query-builder">\n\t\t\t<ui-query-builder-branch\n\t\t\t\tbranch="$ctrl.query"\n\t\t\t\tspec="$ctrl.spec"\n\t\t\t></ui-query-builder-branch>\n\t\t</div>\n\t',controller:["$scope",function($scope){var $ctrl=this;$scope.$watch("$ctrl.spec",function(){_.forEach($ctrl.spec,function(v,k){v.title||(v.title=_.startCase(k)),v.enum&&_.isArray(v.enum)&&(v.enum=_(v.enum).map(function(e){return _.isString(e)?{id:e,title:_.startCase(e)}:e}).sortBy("title").value())})})}]}).component("uiQueryBuilderBranch",{bindings:{branch:"=",spec:"<"},template:'\n\t\t<div ng-repeat="leaf in $ctrl.properties track by leaf.id" ng-switch="leaf.spec.type" class="container row">\n\t\t\t\x3c!-- Root branch display {{{ --\x3e\n\t\t\t<div class="col-md-1 col-join-root" ng-class="$first && \'col-join-root-first\'"></div>\n\t\t\t\x3c!-- }}} --\x3e\n\t\t\t\x3c!-- Path component {{{ --\x3e\n\t\t\t<div class="col-md-2" ng-class="leaf.id ? \'col-join-both\' : \'col-join-left\'">\n\t\t\t\t<div class="btn-group btn-block">\n\t\t\t\t\t<a class="btn btn-1 btn-block dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t{{$ctrl.spec[leaf.id].title || \'Select...\'}}\n\t\t\t\t\t\t<i class="fa fa-caret-down"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t<li ng-repeat="(key, val) in $ctrl.spec track by key" ng-class="key == leaf.id && \'active\'">\n\t\t\t\t\t\t\t<a ng-click="$ctrl.setField(leaf, key)">\n\t\t\t\t\t\t\t\t{{$ctrl.spec[key].title}}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\x3c!-- }}} --\x3e\n\t\t\t\x3c!-- Query type component {{{ --\x3e\n\t\t\t<div ng-show="leaf.valueOperand" class="col-md-2 col-join-both">\n\t\t\t\t<div class="btn-group btn-block">\n\t\t\t\t\t<a class="btn btn-2 btn-block dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t{{($ctrl.operandsByID[leaf.valueOperand][leaf.spec.type] || $ctrl.operandsByID[leaf.valueOperand].base).title}}\n\t\t\t\t\t\t<i class="fa fa-caret-down"></i>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t<li><a ng-click="$ctrl.setWrapper(leaf, \'$eq\')">Is</a></li>\n\t\t\t\t\t\t<li><a ng-click="$ctrl.setWrapper(leaf, \'$ne\')">Is not</a></li>\n\t\t\t\t\t\t<li><a ng-click="$ctrl.setWrapper(leaf, \'$in\')">One of</a></li>\n\t\t\t\t\t\t<li><a ng-click="$ctrl.setWrapper(leaf, \'$nin\')">Not one of</a></li>\n\t\t\t\t\t\t<li ng-if="leaf.spec.type == \'number\'"><a ng-click="$ctrl.setWrapper(leaf, \'$gt\')">Above</a></li>\n\t\t\t\t\t\t<li ng-if="leaf.spec.type == \'number\'"><a ng-click="$ctrl.setWrapper(leaf, \'$lt\')">Below</a></li>\n\t\t\t\t\t\t<li ng-if="leaf.spec.type == \'date\'"><a ng-click="$ctrl.setWrapper(leaf, \'$gt\')">After</a></li>\n\t\t\t\t\t\t<li ng-if="leaf.spec.type == \'date\'"><a ng-click="$ctrl.setWrapper(leaf, \'$lt\')">Before</a></li>\n\t\t\t\t\t\t<li><a ng-click="$ctrl.setWrapper(leaf, \'$exists\')">Has a value</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\x3c!-- }}} --\x3e\n\t\t\t\x3c!-- Query operand component {{{ --\x3e\n\t\t\t<div ng-show="leaf.valueOperand" class="col-md-2 col-join-left btn-group" ng-switch="(operandConfig = $ctrl.operandsByID[leaf.valueOperand][leaf.spec.type] || $ctrl.operandsByID[leaf.valueOperand].base).type">\n\t\t\t\t<div ng-switch-when="string" class="btn btn-block btn-3">\n\t\t\t\t\t<input ng-model="leaf.valueEdit" ng-change="$ctrl.setValue(leaf)" type="text" class="form-control"/>\n\t\t\t\t</div>\n\t\t\t\t<div ng-switch-when="array" class="btn btn-block btn-3 btn-group">\n\t\t\t\t\t<div class="btn-fill dropdown-toggle" data-toggle="dropdown">\n\t\t\t\t\t\t<span class="badge badge-info" ng-repeat="item in $ctrl.spec[leaf.id].enum | uiQueryBuilderFilterSelected:leaf track by item.id">\n\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span ng-if="!leaf.valueEdit.length">...</span>\n\t\t\t\t\t\t<i class="fa fa-caret-down"></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul class="dropdown-menu">\n\t\t\t\t\t\t<li ng-repeat="item in $ctrl.spec[leaf.id].enum | uiQueryBuilderFilterSelected:leaf:false track by item.id">\n\t\t\t\t\t\t\t<a ng-click="$ctrl.setValueIncluded(leaf, item.id, false)">\n\t\t\t\t\t\t\t\t<i class="fa fa-fw fa-check-square text-primary"></i>\n\t\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li ng-repeat="item in $ctrl.spec[leaf.id].enum | uiQueryBuilderFilterSelected:leaf:true track by item.id">\n\t\t\t\t\t\t\t<a ng-click="$ctrl.setValueIncluded(leaf, item.id, true)">\n\t\t\t\t\t\t\t\t<i class="fa fa-fw fa-square-o text-primary"></i>\n\t\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div ng-switch-when="boolean" class="btn btn-block btn-3" ng-click="$ctrl.setValue(leaf, !leaf.valueEdit)">\n\t\t\t\t\t<i class="fa" ng-class="leaf.valueEdit ? \'fa-check-square-o\' : \'fa-square-o\'"></i>\n\t\t\t\t\t{{leaf.valueEdit ? operandConfig.textTrue : operandConfig.textFalse}}\n\t\t\t\t</div>\n\t\t\t\t<div ng-switch-default class="btn btn-block btn-3">\n\t\t\t\t\tUnknown operand: <code>{{leaf.valueOperand}}</code>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\x3c!-- }}} --\x3e\n\t\t</div>\n\t\t\x3c!-- Add button {{{ --\x3e\n\t\t<div class="container row">\n\t\t\t<div ng-show="$ctrl.properties.length" class="col-md-1 col-join-root col-join-root-last"></div>\n\t\t\t<div ng-show="$ctrl.properties.length" class="col-md-2 btn-group col-join-left-add">\n\t\t\t\t<a ng-click="$ctrl.add()" class="btn btn-lg btn-add btn-default">\n\t\t\t\t\t<i class="fa fa-fw fa-plus fa-lg"></i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<div ng-show="!$ctrl.properties.length" class="col-md-2 col-md-offset-1 btn-group">\n\t\t\t\t<a ng-click="$ctrl.add()" class="btn btn-lg btn-add btn-default">\n\t\t\t\t\t<i class="fa fa-fw fa-plus fa-lg"></i>\n\t\t\t\t\tAdd filter\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t\t\x3c!-- }}} --\x3e\n\t',controller:["$scope",function($scope){var $ctrl=this;$ctrl.operands=[{id:"$eq",setter:function(v){return{$eq:v}},export:function(leaf){return leaf.valueEdit},base:{title:"Is",type:"string"},boolean:{title:"Is",type:"boolean",textTrue:"Enabled",textFalse:"Disabled"}},{id:"$ne",setter:function(v){return{$ne:v}},export:function(leaf){return leaf.valueEdit},base:{title:"Is not",type:"string"},boolean:{title:"Is not",type:"boolean",textTrue:"Enabled",textFalse:"Disabled"}},{id:"$in",setter:function(v){return{$in:_.isArray(v)?v.split(/\s*,\s*/):[v]}},export:function(leaf){return{$in:leaf.value.$in}},base:{title:"One of",type:"array"}},{id:"$nin",setter:function(v){return{$nin:_.isArray(v)?v.split(/\s*,\s*/):[v]}},export:function(leaf){return{$nin:leaf.value.$nin}},base:{title:"Not one of",type:"array"}},{id:"$gt",setter:function(v){return{$gt:v}},export:function(leaf){return{$gt:leaf.value.$gt}},base:{title:"Above",type:"number"}},{id:"$gte",setter:function(v){return{$gte:v}},export:function(leaf){return{$gte:leaf.value.$gte}},base:{title:"Above or equals",type:"number"}},{id:"$lt",setter:function(v){return{$lt:v}},export:function(leaf){return{$lt:leaf.value.$lt}},base:{title:"Below",type:"number"}},{id:"$lte",setter:function(v){return{$lt:v}},export:function(leaf){return{$lte:leaf.value.$lte}},base:{title:"Below or equals",type:"number"}},{id:"$exists",setter:function(v){return{$exists:!!v}},export:function(leaf){return{$exists:leaf.value.$exists}},base:{title:"Has a value",type:"boolean",textTrue:"Has a value",textFalse:"Has no value"}},{id:"$regexp",setter:function(v){return{$regexp:v}},export:function(leaf){return{$regexp:leaf.value.$regexp}},base:{title:"Matches",type:"string"}}],$ctrl.operandsByID=_.mapKeys($ctrl.operands,"id"),$ctrl.getSpec=function(key,val,path){return $ctrl.spec[path]?$ctrl.spec[path]:"$and"==key||"$or"==key?_defineProperty({type:"group"},"type",key):_.isString(val)?{type:"string"}:_.isNumber(val)?{type:"number"}:{type:"string"}},$ctrl.translateBranch=function(branch){var pathSegments=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return _($ctrl.branch).map(function(v,k){var wrappingKey=_.isObject(v)?_(v).keys().first():"$eq";return{id:k,value:v,valueEdit:(_.isObject(v)&&_.size(v)>0?_(v).map().first():void 0)||v,valueOperand:wrappingKey,isMeta:k.startsWith("$"),spec:$ctrl.getSpec(k,v,k),path:pathSegments.concat([k])}}).sortBy(function(p){return p.isMeta?"Z"+p.id:"A"+p.id}).value()},$ctrl.exportBranch=function(){$ctrl.branch=_($ctrl.properties).mapKeys(function(b){return b.id}).mapValues(function(b){return $ctrl.operandsByID[b.valueOperand].export(b)}).value()},$ctrl.properties,$scope.$watchGroup(["$ctrl.branch","$ctrl.spec"],function(){$ctrl.branch&&$ctrl.spec&&($ctrl.properties=$ctrl.translateBranch($ctrl.branch))}),$ctrl.setField=function(leaf,field){leaf.id=field,leaf.path=[field],leaf.value=void 0,leaf.valueEdit=void 0,leaf.valueOperand="$eq",leaf.spec=$ctrl.spec[field],$ctrl.setValue(leaf)},$ctrl.setWrapper=function(leaf,type){var newValue={};_.isObject(leaf.value)&&1==_.size(leaf.value)?newValue[type]=_(leaf.value).values().first():newValue[type]=leaf.valueEdit,leaf.valueOperand=type,leaf.value=newValue,leaf.valueEdit=_.isObject(newValue[type])&&_.size(newValue[type])?newValue[type]:newValue,$ctrl.setValue(leaf)},$ctrl.setValue=function(leaf,value){var newValue=_.isUndefined(value)?leaf.valueEdit:value;leaf.value=$ctrl.operandsByID[leaf.valueOperand].setter(newValue),leaf.valueEdit=_.isObject(leaf.value)&&_.size(leaf.value)?_(leaf.value).map().first():leaf.value,$ctrl.exportBranch()},$ctrl.setValueIncluded=function(leaf,value,included){var wrapperKey=_(leaf.value).keys().first();if(!wrapperKey)throw new Error("Tried to set array inclusion on non wrapped key: "+leaf.value);var isIncluded=leaf.value[wrapperKey].includes(value);included&&!isIncluded?leaf.value[wrapperKey].push(value):!included&&isIncluded&&(leaf.value[wrapperKey]=leaf.value[wrapperKey].filter(function(i){return i!=value})),leaf.value[wrapperKey].sort(),leaf.valueEdit=_.isObject(leaf.value)&&_.size(leaf.value)?_(leaf.value).map().first():leaf.value},$ctrl.add=function(){$ctrl.properties.every(function(p){return p.id})&&$ctrl.properties.push({})}}]}).filter("uiQueryBuilderFilterSelected",function(){return function(items,leaf,invert){if(items)return items.filter(function(i){var doesInclude=leaf.valueEdit.includes(i.id);return invert?!doesInclude:doesInclude})}});